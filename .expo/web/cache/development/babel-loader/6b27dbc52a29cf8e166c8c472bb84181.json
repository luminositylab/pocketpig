{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Shadow from \"./Shadow\";\nimport { hexToHsl, hslToHex } from \"./utils\";\nimport LinearGradient from 'react-native-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NeuView = function NeuView(props) {\n  var _props$color = props.color,\n      color = _props$color === void 0 ? '#444444' : _props$color,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 100 : _props$width,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 100 : _props$height,\n      _props$radius = props.radius,\n      radius = _props$radius === void 0 ? 0 : _props$radius,\n      children = props.children,\n      _props$customLightSha = props.customLightShadow,\n      customLightShadow = _props$customLightSha === void 0 ? {} : _props$customLightSha,\n      _props$customDarkShad = props.customDarkShadow,\n      customDarkShadow = _props$customDarkShad === void 0 ? {} : _props$customDarkShad,\n      _props$customInsetLig = props.customInsetLightShadow,\n      customInsetLightShadow = _props$customInsetLig === void 0 ? {} : _props$customInsetLig,\n      _props$customInsetDar = props.customInsetDarkShadow,\n      customInsetDarkShadow = _props$customInsetDar === void 0 ? {} : _props$customInsetDar,\n      customGradient = props.customGradient,\n      _props$borderRadius = props.borderRadius,\n      borderRadius = _props$borderRadius === void 0 ? 0 : _props$borderRadius,\n      inset = props.inset,\n      convex = props.convex,\n      concave = props.concave,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style,\n      containerStyle = props.containerStyle,\n      noShadow = props.noShadow;\n\n  var _hexToHsl = hexToHsl(color),\n      h = _hexToHsl.h,\n      s = _hexToHsl.s,\n      l = _hexToHsl.l;\n\n  var light = hslToHex(h - 2 < 0 ? 0 : h - 2, s, l + 5 > 100 ? 100 : l + 5);\n  var dark = hslToHex(h, s, l - 8 < 0 ? 0 : l - 20);\n  var mid = hslToHex(h, s, l - 5 < 0 ? 0 : l - 5);\n\n  var lightSetting = _objectSpread({\n    width: width,\n    height: height,\n    blur: 10,\n    spread: 0,\n    borderRadius: borderRadius,\n    radius: radius,\n    color: inset ? dark : light,\n    offsetX: inset ? -2 : -4,\n    offsetY: inset ? -2 : -4,\n    opacity: 1\n  }, customLightShadow);\n\n  var darkSetting = _objectSpread({\n    width: width,\n    height: height,\n    blur: 10,\n    spread: 0,\n    radius: radius,\n    color: inset ? light : dark,\n    borderRadius: borderRadius,\n    offsetX: inset ? 2 : 3,\n    offsetY: inset ? 2 : 3,\n    opacity: 1\n  }, customDarkShadow);\n\n  var insetLightSetting = _objectSpread({\n    width: width,\n    height: height,\n    blur: 5,\n    spread: 0,\n    borderRadius: borderRadius,\n    radius: radius,\n    color: dark,\n    offsetX: -3,\n    offsetY: -3,\n    opacity: 1\n  }, customInsetDarkShadow);\n\n  var insetDarkSetting = _objectSpread({\n    width: width + 2,\n    height: height + 2,\n    blur: 5,\n    spread: 1,\n    radius: radius,\n    color: light,\n    borderRadius: borderRadius,\n    offsetX: 0,\n    offsetY: 0,\n    opacity: 1\n  }, customInsetLightShadow);\n\n  var styles = StyleSheet.create({\n    container: {\n      position: 'relative'\n    },\n    view: {\n      width: width,\n      height: height,\n      borderRadius: borderRadius,\n      backgroundColor: color,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n\n  var renderComposed = function renderComposed(children) {\n    if (concave) {\n      return _jsx(_Fragment, {\n        children: _jsx(LinearGradient, {\n          colors: customGradient ? customGradient : [mid, light],\n          useAngle: true,\n          angle: 145,\n          angleCenter: {\n            x: 0.5,\n            y: 0.5\n          },\n          style: {\n            borderRadius: borderRadius\n          },\n          children: _jsx(View, {\n            style: _objectSpread(_objectSpread(_objectSpread({}, styles.view), containerStyle), {}, {\n              backgroundColor: 'transparent'\n            }),\n            children: children\n          })\n        })\n      });\n    }\n\n    if (convex) {\n      return _jsx(_Fragment, {\n        children: _jsx(LinearGradient, {\n          colors: customGradient ? customGradient.reverse() : [light, mid],\n          useAngle: true,\n          angle: 145,\n          angleCenter: {\n            x: 0.5,\n            y: 0.5\n          },\n          style: {\n            borderRadius: borderRadius\n          },\n          children: _jsx(View, {\n            style: _objectSpread(_objectSpread(_objectSpread({}, styles.view), containerStyle), {}, {\n              backgroundColor: 'transparent'\n            }),\n            children: children\n          })\n        })\n      });\n    }\n\n    return _jsx(_Fragment, {\n      children: _jsx(View, {\n        style: _objectSpread(_objectSpread({}, styles.view), containerStyle),\n        children: children\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), style),\n    children: [!noShadow && _jsxs(_Fragment, {\n      children: [_jsx(Shadow, {\n        setting: inset ? insetDarkSetting : lightSetting\n      }), _jsx(Shadow, {\n        setting: inset ? insetLightSetting : darkSetting\n      })]\n    }), renderComposed(children)]\n  });\n};\n\nNeuView.propTypes = {\n  color: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  radius: PropTypes.number,\n  customLightShadow: ViewPropTypes,\n  customDarkShadow: ViewPropTypes,\n  borderRadius: PropTypes.number,\n  customGradient: PropTypes.array,\n  style: ViewPropTypes,\n  containerStyle: ViewPropTypes,\n  inset: PropTypes.bool,\n  convex: PropTypes.bool,\n  concave: PropTypes.bool,\n  noShadow: PropTypes.bool\n};\nexport default NeuView;","map":{"version":3,"sources":["C:/Users/Jay Patel/Documents/Luminosity Lab/Bank Of The West/pocketpig/node_modules/react-native-neu-element/lib/NeuView.js"],"names":["React","PropTypes","ViewPropTypes","Shadow","hexToHsl","hslToHex","LinearGradient","NeuView","props","color","width","height","radius","children","customLightShadow","customDarkShadow","customInsetLightShadow","customInsetDarkShadow","customGradient","borderRadius","inset","convex","concave","style","containerStyle","noShadow","h","s","l","light","dark","mid","lightSetting","blur","spread","offsetX","offsetY","opacity","darkSetting","insetLightSetting","insetDarkSetting","styles","StyleSheet","create","container","position","view","backgroundColor","alignItems","justifyContent","renderComposed","x","y","reverse","propTypes","string","isRequired","number","array","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, View, ViewPropTypes } from 'react-native';\nimport Shadow from './Shadow';\n\nimport { hexToHsl, hslToHex } from './utils';\n\nimport LinearGradient from 'react-native-linear-gradient';\n\nconst NeuView = props => {\n  const {\n    color = '#444444',\n    width = 100,\n    height = 100,\n    radius = 0,\n    children,\n    customLightShadow = {},\n    customDarkShadow = {},\n    customInsetLightShadow = {},\n    customInsetDarkShadow = {},\n    customGradient,\n    borderRadius = 0,\n    inset,\n    convex,\n    concave,\n    style = {},\n    containerStyle,\n    noShadow\n  } = props;\n\n  const { h, s, l } = hexToHsl(color);\n  const light = hslToHex(h - 2 < 0 ? 0 : h - 2, s, l + 5 > 100 ? 100 : l + 5);\n  const dark = hslToHex(h, s, l - 8 < 0 ? 0 : l - 20);\n  const mid = hslToHex(h, s, l - 5 < 0 ? 0 : l - 5);\n\n  const lightSetting = {\n    width,\n    height,\n    blur: 10,\n    spread: 0,\n    borderRadius,\n    radius,\n    color: inset ? dark : light,\n    offsetX: inset ? -2 : -4,\n    offsetY: inset ? -2 : -4,\n    opacity: 1,\n    ...customLightShadow\n  };\n\n  const darkSetting = {\n    width,\n    height,\n    blur: 10,\n    spread: 0,\n    radius,\n    color: inset ? light : dark,\n    borderRadius,\n    offsetX: inset ? 2 : 3,\n    offsetY: inset ? 2 : 3,\n    opacity: 1,\n    ...customDarkShadow\n  };\n\n  const insetLightSetting = {\n    width,\n    height,\n    blur: 5,\n    spread: 0,\n    borderRadius,\n    radius,\n    color: dark,\n    offsetX: -3,\n    offsetY: -3,\n    opacity: 1,\n    ...customInsetDarkShadow\n  };\n\n  const insetDarkSetting = {\n    width: width + 2,\n    height: height + 2,\n    blur: 5,\n    spread: 1,\n    radius,\n    color: light,\n    borderRadius,\n    offsetX: 0,\n    offsetY: 0,\n    opacity: 1,\n    ...customInsetLightShadow\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      position: 'relative'\n    },\n    view: {\n      width,\n      height,\n      borderRadius,\n      backgroundColor: color,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n\n  const renderComposed = children => {\n    if (concave) {\n      return (\n        <>\n          <LinearGradient\n            colors={customGradient ? customGradient : [mid, light]}\n            useAngle={true}\n            angle={145}\n            angleCenter={{ x: 0.5, y: 0.5 }}\n            style={{\n              borderRadius\n            }}\n          >\n            <View\n              style={{\n                ...styles.view,\n                ...containerStyle,\n                backgroundColor: 'transparent'\n              }}\n            >\n              {children}\n            </View>\n          </LinearGradient>\n        </>\n      );\n    }\n\n    if (convex) {\n      return (\n        <>\n          <LinearGradient\n            colors={customGradient ? customGradient.reverse() : [light, mid]}\n            useAngle={true}\n            angle={145}\n            angleCenter={{ x: 0.5, y: 0.5 }}\n            style={{\n              borderRadius\n            }}\n          >\n            <View\n              style={{\n                ...styles.view,\n                ...containerStyle,\n                backgroundColor: 'transparent'\n              }}\n            >\n              {children}\n            </View>\n          </LinearGradient>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <View\n          style={{\n            ...styles.view,\n            ...containerStyle\n          }}\n        >\n          {children}\n        </View>\n      </>\n    );\n  };\n\n  return (\n    <View\n      style={{\n        ...styles.container,\n        ...style\n      }}\n    >\n      {!noShadow && (\n        <>\n          <Shadow setting={inset ? insetDarkSetting : lightSetting} />\n          <Shadow setting={inset ? insetLightSetting : darkSetting} />\n        </>\n      )}\n      {renderComposed(children)}\n    </View>\n  );\n};\n\nNeuView.propTypes = {\n  color: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  radius: PropTypes.number,\n  customLightShadow: ViewPropTypes,\n  customDarkShadow: ViewPropTypes,\n  borderRadius: PropTypes.number,\n  customGradient: PropTypes.array,\n  style: ViewPropTypes,\n  containerStyle: ViewPropTypes,\n  inset: PropTypes.bool,\n  convex: PropTypes.bool,\n  concave: PropTypes.bool,\n  noShadow: PropTypes.bool\n};\n\nexport default NeuView;\n"]},"metadata":{},"sourceType":"module"}